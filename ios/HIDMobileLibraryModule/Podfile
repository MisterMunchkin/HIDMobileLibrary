
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")
require File.join(File.dirname(`node --print "require.resolve('react-native-unimodules/package.json')"`), "cocoapods.rb")
require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")

require_relative '../../node_modules/@react-native-community/cli-platform-ios/native_modules'

# Uncomment the next line to define a global platform for your project
platform :ios, '12.0'

# use_frameworks!

project 'HIDMobileLibraryModule', {
  'Debug' => :debug,
  'Release' => :release,
}

def applibs
  pod 'OrigoSDK-Debug', :configuration => ['Debug'], :path  => 'Origo_Keys_iOS_SDK/Debug/OrigoSDK-Debug.podspec'
  pod 'OrigoSDK-Release', :configuration => ['Release'], :path  => 'Origo_Keys_iOS_SDK/Release/OrigoSDK-Release.podspec'
  pod 'SeosMobileKeysSDK-Debug', :configuration => ['Debug'], :path  => 'Origo_Keys_iOS_SDK/Debug/SeosMobileKeysSDK-Debug.podspec'
  pod 'SeosMobileKeysSDK-Release', :configuration => ['Release'], :path  => 'Origo_Keys_iOS_SDK/Release/SeosMobileKeysSDK-Release.podspec'
end

target 'HIDMobileLibraryModule' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_expo_modules!
  config = use_expo_modules!
  # use_react_native!(:path => config[:reactNativePath])

  #######################
  ##Global Dependencies##
  #######################
  workspace 'HIDMobileLibraryModule.xcworkspace'
  project 'HIDMobileLibraryModule.xcodeproj'
  applibs

  # Pods for HIDMobileLibraryModule
  pod 'React-Core', :path => '../../node_modules/react-native/'
  # pod 'React-Core/DevSupport', :path => '../../node_modules/react-native/'
  # pod 'React-Core/RCTWebSocket', :path => '../../node_modules/react-native'

  pod 'DoubleConversion', :podspec => '../../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  pod 'Folly', :podspec => '../../node_modules/react-native/third-party-podspecs/Folly.podspec'
  
  pod 'React-callinvoker', :podspec => '../../node_modules/react-native/ReactCommon/callinvoker'
  pod 'React-cxxreact', :path => '../../node_modules/react-native/ReactCommon/cxxreact'
  pod 'React-jsi', :path => '../../node_modules/react-native/ReactCommon/jsi'
  pod 'React-jsiexecutor', :path => '../../node_modules/react-native/ReactCommon/jsiexecutor'
  pod 'React-jsinspector', :path => '../../node_modules/react-native/ReactCommon/jsinspector'
  pod 'Yoga', :path => '../../node_modules/react-native/ReactCommon/yoga'
  pod 'ReactCommon/turbomodule/core', :path => '../../node_modules/react-native/ReactCommon'
end


##############################
##Pre and Post install hooks##
##############################
post_install do |installer|
  require 'fileutils'
  target :'HIDMobileLibraryModule' do
      FileUtils.cp_r('Pods/Target Support Files/Pods-HIDMobileLibraryModule/Pods-HIDMobileLibraryModule-Acknowledgements.plist', 'Pods-acknowledgements.plist', :remove_destination => true)
  end
  installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
          config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = ""
          config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
          config.build_settings['CODE_SIGNING_REQUIRED'] = "NO"
          config.build_settings['CODE_SIGNING_ALLOWED'] = "NO"
          config.build_settings['ENABLE_BITCODE'] = "YES"
    config.build_settings['BITCODE_GENERATION_MODE'] = "bitcode"
          config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = "YES"
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'	

      end
  end
  FileUtils.cp_r('Pods/Target Support Files/Pods-HIDMobileLibraryModule/Pods-HIDMobileLibraryModule-Acknowledgements.plist', 'Pods-acknowledgements.plist', :remove_destination => true)
end
