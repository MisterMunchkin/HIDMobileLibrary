
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")
require File.join(File.dirname(`node --print "require.resolve('react-native-unimodules/package.json')"`), "cocoapods.rb")
require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")

require_relative '../../node_modules/@react-native-community/cli-platform-ios/native_modules'

# Uncomment the next line to define a global platform for your project
platform :ios, '12.1'

# use_frameworks!

#This came from HIDMobile SDK Pods install sample
project 'HIDMobileLibraryModule', {
  'Debug' => :debug,
  'Release' => :release,
}

def applibs
  pod 'OrigoSDK-Debug', :configuration => ['Debug'], :path  => 'Origo_Keys_iOS_SDK/Debug/OrigoSDK-Debug.podspec'
  pod 'OrigoSDK-Release', :configuration => ['Release'], :path  => 'Origo_Keys_iOS_SDK/Release/OrigoSDK-Release.podspec'
  pod 'SeosMobileKeysSDK-Debug', :configuration => ['Debug'], :path  => 'Origo_Keys_iOS_SDK/Debug/SeosMobileKeysSDK-Debug.podspec'
  pod 'SeosMobileKeysSDK-Release', :configuration => ['Release'], :path  => 'Origo_Keys_iOS_SDK/Release/SeosMobileKeysSDK-Release.podspec'
end
#End of HIDMobile SDK Pods install sample

target 'HIDMobileLibraryModule' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_expo_modules!
  config = use_expo_modules!
  #use_frameworks!
  # use_react_native!(:path => config[:reactNativePath])

  #######################
  ##Global Dependencies##
  #######################
  workspace 'HIDMobileLibraryModule.xcworkspace'
  project 'HIDMobileLibraryModule.xcodeproj'
  applibs

  # Pods for HIDMobileLibraryModule
  #pod 'React-Core', :path => '../../node_modules/react-native/'
  pod 'FBLazyVector', :path => "../../node_modules/react-native/Libraries/FBLazyVector"
  pod 'FBReactNativeSpec', :path => "../../node_modules/react-native/React/FBReactNativeSpec"
  pod 'RCTRequired', :path => "../../node_modules/react-native/Libraries/RCTRequired"
  pod 'RCTTypeSafety', :path => "../../node_modules/react-native/Libraries/TypeSafety"

  #React
  pod 'React', :path => '../../node_modules/react-native/'
  pod 'React-Core', :path => '../../node_modules/react-native/'
  pod 'React-CoreModules', :path => '../../node_modules/react-native/React/CoreModules'
  pod 'React-Core/DevSupport', :path => '../../node_modules/react-native/'
  pod 'React-RCTActionSheet', :path => '../../node_modules/react-native/Libraries/ActionSheetIOS'
  pod 'React-RCTAnimation', :path => '../../node_modules/react-native/Libraries/NativeAnimation'
  pod 'React-RCTBlob', :path => '../../node_modules/react-native/Libraries/Blob'
  pod 'React-RCTImage', :path => '../../node_modules/react-native/Libraries/Image'
  pod 'React-RCTLinking', :path => '../../node_modules/react-native/Libraries/LinkingIOS'
  pod 'React-RCTNetwork', :path => '../../node_modules/react-native/Libraries/Network'
  pod 'React-RCTSettings', :path => '../../node_modules/react-native/Libraries/Settings'
  pod 'React-RCTText', :path => '../../node_modules/react-native/Libraries/Text'
  pod 'React-RCTVibration', :path => '../../node_modules/react-native/Libraries/Vibration'
  pod 'React-Core/RCTWebSocket', :path => '../../node_modules/react-native/'
  
  pod 'React-cxxreact', :path => '../../node_modules/react-native/ReactCommon/cxxreact'
  pod 'React-jsi', :path => '../../node_modules/react-native/ReactCommon/jsi'
  pod 'React-jsiexecutor', :path => '../../node_modules/react-native/ReactCommon/jsiexecutor'
  pod 'React-jsinspector', :path => '../../node_modules/react-native/ReactCommon/jsinspector'
  pod 'React-callinvoker', :path => '../../node_modules/react-native/ReactCommon/callinvoker'
  pod 'ReactCommon/turbomodule/core', :path => '../../node_modules/react-native/ReactCommon'
  pod 'Yoga', :path => '../../node_modules/react-native/ReactCommon/yoga'

  #podspecs
  pod 'boost', :podspec => '../../node_modules/react-native/third-party-podspecs/boost.podspec'
  pod 'DoubleConversion', :podspec => '../../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  pod 'glog', :podspec => '../../node_modules/react-native/third-party-podspecs/glog.podspec'
  pod 'RCT-Folly', :podspec => '../../node_modules/react-native/third-party-podspecs/RCT-Folly.podspec'

  #Perf Logger for CallInvoker
  pod 'React-perflogger', :path => '../../node_modules/react-native/ReactCommon/reactperflogger'
  pod 'React-logger', :path => '../../node_modules/react-native/ReactCommon/logger'
  pod 'React-runtimeexecutor', :path => '../../node_modules/react-native/ReactCommon/runtimeexecutor'
end


##############################
##Pre and Post install hooks## This came from HIDMobile SDK Pods install sample
##############################
post_install do |installer|
  require 'fileutils'
  target :'HIDMobileLibraryModule' do
      FileUtils.cp_r('Pods/Target Support Files/Pods-HIDMobileLibraryModule/Pods-HIDMobileLibraryModule-Acknowledgements.plist', 'Pods-acknowledgements.plist', :remove_destination => true)
  end
  installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
          config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = ""
          config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
          config.build_settings['CODE_SIGNING_REQUIRED'] = "NO"
          config.build_settings['CODE_SIGNING_ALLOWED'] = "NO"
          config.build_settings['ENABLE_BITCODE'] = "YES"
    config.build_settings['BITCODE_GENERATION_MODE'] = "bitcode"
          config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = "YES"
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '12.0'	

      end
  end
  FileUtils.cp_r('Pods/Target Support Files/Pods-HIDMobileLibraryModule/Pods-HIDMobileLibraryModule-Acknowledgements.plist', 'Pods-acknowledgements.plist', :remove_destination => true)
end
